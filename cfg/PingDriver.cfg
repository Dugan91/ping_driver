#!/usr/bin/env python
# Dynamic Reconfigure configuration file for pingDriver.py
#
# This file defines the device parameters that can be modified
# via the ROS Dynamic Reconfigure interface

PACKAGE = "ping_driver"

# Importing prerequisites for dynamic reconfig 
from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

# ? What do all the parameters do? 
# Each gen.add call is adding another entry with dynamic reconfig
gen.add("ping_enabled", bool_t, 0, "Ping Enabled", False)
gen.add("ping_frequency", int_t, 0, "Pings per Second (Hz)", 10, 0, 30)
gen.add("speed_of_sound", int_t, 0, "Speed of Sound (m/s)", 1498, 30, 1498)
gen.add("auto", bool_t, 0, "Auto Gain", True)

# Enumerable variable that holds the possible gain states supported by the ping 
gain_enum = gen.enum([gen.const("0_6dB",  int_t, 0, "0.6dB"),
                      gen.const("1_8dB",  int_t, 1, "1.8dB"),
                      gen.const("5_5dB",  int_t, 2, "5.5dB"),
                      gen.const("12_9dB",  int_t, 3, "12.9dB"),
                      gen.const("30_2dB",  int_t, 4, "30.2dB"),
                      gen.const("66_1dB",  int_t, 5, "66.1dB"),
                      gen.const("144dB",  int_t, 6, "144dB")], "Gains (dB)")

gen.add("scan_start", double_t, 0, "Scan Start (m)", 0, 0, 29.5)
gen.add("scan_length", double_t, 0, "Scan Length (m)", 10, 0.5, 30)

gen.add("gain", int_t, 0, "Gains (dB)", 0, 0, 6, edit_method=gain_enum)

exit(gen.generate(PACKAGE, "ping_driver", "PingDriver"))